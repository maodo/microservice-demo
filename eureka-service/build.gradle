group 'microservicedemo'

buildscript {
    ext {
        springBootVersion = '1.2.4.RELEASE'
        springCloudVersion = '1.0.2.RELEASE'
        groovyVersion = '2.4.3'
	    dockerVersion = '1.2'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:${dockerVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'docker'

group = 'docker'
mainClassName = 'com.nklmish.es.Application'

distDocker {
    exposePort 8761
    setEnvironment 'JAVA_OPTS', '-Dspring.profiles.active=docker'
}

docker {
    baseImage = 'java:8'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
sourceCompatibility = 1.8

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile ("org.springframework.cloud:spring-cloud-starter-eureka-server:${springCloudVersion}") {
        exclude(module: 'servlet-api')
    }
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
}

jar {
    baseName = 'eureka-service'
    version = '1.0-SNAPSHOT'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
